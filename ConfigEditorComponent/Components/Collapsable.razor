
<div style="margin:@marginPx 0 @marginPx 0">
	@if (isCollapsable)
	{
		<div class="@(isDictionaryKey ? "config-property" : "config-property")">
			<span @onclick="ToggleExpandCollapse" class="padding-left:-25px" id="collapsable-span">

				<svg class="expand-collapse-icon" transform="rotate(@(isExpanded ? 90 : 0))" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="-33 -33 396.00 396.00" xml:space="preserve"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path id="XMLID_222_" d="M250.606,154.389l-150-149.996c-5.857-5.858-15.355-5.858-21.213,0.001 c-5.857,5.858-5.857,15.355,0.001,21.213l139.393,139.39L79.393,304.394c-5.857,5.858-5.857,15.355,0.001,21.213 C82.322,328.536,86.161,330,90,330s7.678-1.464,10.607-4.394l149.999-150.004c2.814-2.813,4.394-6.628,4.394-10.606 C255,161.018,253.42,157.202,250.606,154.389z"></path> </g></svg>

				<span class="config-property-name expand-collapse-property-name">
					@PropertyName
					@if (!String.IsNullOrEmpty(description))
					{
						<ToolTip Text="@description" />
					}:
				</span>

			</span>

			@HeadContent
		<div class="px-2" hidden="@(!isExpanded)">
			@BodyContent
		</div>
		</div>


	}
	else
	{
		<div class="@(isDictionaryKey ? "config-property" : "config-property")">

			<span class="config-property-name">
				@PropertyName
				@if (!String.IsNullOrEmpty(description))
				{
					<ToolTip Text="@description" />
				}:
			</span>
			@HeadContent
		</div>
		@BodyContent
	}
</div>


@code {
	[Parameter]
	public RenderFragment HeadContent { get; set; }

	[Parameter]
	public string PropertyName { get; set; }


	[Parameter]
	public RenderFragment BodyContent { get; set; }

	[Parameter]
	public bool isCollapsable { get; set; }

	[Parameter]
	public string? description { get; set; }


	[Parameter]
	public int spacing { get; set; } = 0;

	[Parameter]
	public bool isDictionaryKey { get; set; } = false;

	bool isExpanded = false;
	private string marginPx;

	private void ToggleExpandCollapse()
	{
		isExpanded = !isExpanded;
	}

	protected override void OnParametersSet()
	{
		marginPx = spacing.ToString() + "px";
	}

}